<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Democratizing Data</title>
    <link>https://chezo.uno/</link>
    <description>Recent content on Democratizing Data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 24 Aug 2016 16:07:02 +0900</lastBuildDate>
    
	<atom:link href="https://chezo.uno/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>livy &amp; Jupyter notebook &amp; sparkmagic = Powerful &amp; Easy notebook for Data Scientist</title>
      <link>https://chezo.uno/blog/livy--jupyter-notebook--sparkmagic--powerful--easy-notebook-for-data-scientist/</link>
      <pubDate>Wed, 24 Aug 2016 16:07:02 +0900</pubDate>
      
      <guid>https://chezo.uno/blog/livy--jupyter-notebook--sparkmagic--powerful--easy-notebook-for-data-scientist/</guid>
      <description>livy is a REST server of Spark. You can see the talk of the Spark Summit 2016, Microsoft uses livy for HDInsight with Jupyter notebook and sparkmagic. Jupyter notebook is one of the most popular notebook OSS within data scientists. Using sparkmagic + Jupyter notebook, data scientists can execute ad-hoc Spark job easily.
Why livy is good? According to the official document, livy has features like:
 Have long running SparkContexts that can be used for multiple Spark jobs, by multiple clients Share cached RDDs or Dataframes across multiple jobs and clients Multiple SparkContexts can be managed simultaneously, and they run on the cluster (YARN/Mesos) instead of the Livy Server for good fault tolerance and concurrency Jobs can be submitted as precompiled jars, snippets of code, or via Java/Scala client API Ensure security via secure authenticated communication Apache License, 100% open source  Why livy + sparkmagic?</description>
    </item>
    
    <item>
      <title>code</title>
      <link>https://chezo.uno/code/</link>
      <pubDate>Tue, 23 Aug 2016 15:17:52 +0900</pubDate>
      
      <guid>https://chezo.uno/code/</guid>
      <description>Codes  TinySegmenter.jl  Julia implimentation of compact Japanese tokenizer  Mykytea-python, Mykytea-ruby  Python and Ruby wrapper of KyTea, Japanese morophological analyzer  MeCab.jl  Julia binding of Japanese morphological analyzer MeCab  julia-100-exercises  julia version of 100 numpy exercises  tabula-py  Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame   For full codes list, see GitHub
Notebooks  ibis-demo  Demo notebooks of ibis, Python productivity framework for the Apache Hadoop ecosystem.</description>
    </item>
    
    <item>
      <title>Building predictive model with Ibis and scikit-learn</title>
      <link>https://chezo.uno/blog/building-predictive-model-with-ibis-and-scikit-learn/</link>
      <pubDate>Tue, 23 Aug 2016 13:46:03 +0900</pubDate>
      
      <guid>https://chezo.uno/blog/building-predictive-model-with-ibis-and-scikit-learn/</guid>
      <description>tl;dr  visualising MovieLens 20M data (famous movie rating data) with Ibis build predictive model for movie favor with scikit-learn repo / notebook  What is Ibis? Ibis is a bridge between Python and Big Data. Ibis enables pandas handling Big Data.
For more detail, see Wes&amp;rsquo;s presentation.
  Ibis: Scaling Python Analytics on Hadoop and Impala  from Wes McKinney 
As you know, pandas is known as a killer application for data analysis.</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://chezo.uno/about/</link>
      <pubDate>Tue, 23 Aug 2016 13:41:42 +0900</pubDate>
      
      <guid>https://chezo.uno/about/</guid>
      <description>Michiaki Ariga Sales Engineer / Field Data Scientist at Cloudera.
I&amp;rsquo;m interested in natural language processing and machine learning, and applying those technologies in production. I love to think how leverage data with technology for bussiness. I also love to write Ruby, Python and Julia for ML.
I am a podcaster of technical podcast rubyist.club.
Japanese Blog
Codes &amp;amp; Notebooks See code page
Communities  Founder of kawasaki.rb, regional Ruby community  Organized Kanagawa Ruby Kaigi 01 and Kawasaki Ruby Kaigi 01  Founder of Machine Learning Casual Talks Co-founder of Julia Tokyo  Papers See Google scholar</description>
    </item>
    
  </channel>
</rss>